
DEFAULT_C = (255, 255, 255)
PALETTE = {
    '.': (0, 0, 0),
    'R': (255, 0, 0),
    'G': (0, 255, 0),
    'B': (0, 0, 255),
}

class Pattern:

    def __init__(self, name, pat):
        self.name = name
        self.pat = pat

    def get(self, c, r):
        return ((0 <= r < len(self.pat))
                and (0 <= c < len(self.pat[r]))
                and (self.pat[r][c] != '.'))

    def cget(self, c, r):
        if not ((0 <= r < len(self.pat))
                and (0 <= c < len(self.pat[r]))):
            return DEFAULT_C
        return PALETTE.get(self.pat[r][c], DEFAULT_C)

def p(name, data):
    return Pattern(name, data)

DEAR_BIG = p("dear-big", [
    #01234567890123456789
    "....................", #0
    "....................", #1
    ".@@@..@@@..@@..@@@..", #2
    ".@..@.@...@..@.@..@.", #3
    ".@..@.@...@..@.@..@.", #4
    ".@..@.@@..@@@@.@@@..", #5
    ".@..@.@...@..@.@@...", #6
    ".@..@.@...@..@.@.@..", #7
    ".@..@.@...@..@.@..@.", #8
    ".@@@..@@@.@..@.@..@.", #9
    "....................", #A
    "....................", #B
])

CAMP_DEAR = p("camp dear", [
    #01234567890123456789
    "....................", #0
    "..@@..@@..@...@.@@@.", #1
    ".@...@..@.@@.@@.@..@", #2
    ".@...@@@@.@.@.@.@@@.", #3
    ".@...@..@.@...@.@...", #4
    "..@@.@..@.@...@.@...", #5
    "....................", #6
    ".@@@..@@@..@@..@@@..", #7
    ".@..@.@...@..@.@..@.", #8
    ".@..@.@@..@@@@.@@@..", #9
    ".@..@.@...@..@.@.@..", #A
    ".@@@..@@@.@..@.@..@.", #B
])

TEST = p("test", [
    #01234567890123456789
    "R@@@............@@@R", #0
    "@..................@", #1
    "@..................@", #2
    "@.RRR....GG...BBB..@", #3
    "..R..R..G..G..B..B..", #4
    "..RRR...G.....BBB...", #5
    "..R..R..G.GG..B..B..", #6
    "..R..R..G..G..B..B..", #7
    "@.R..R...GG...BBB..@", #8
    "@..................@", #9
    "@..................@", #A
    "R@@@............@@@R", #B
])

